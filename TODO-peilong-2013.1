1.       Accelerator Simulation
a)         Learn the way to use ‘syscall’ function in native Linux machine.
b)         Add my own ‘acc’ system function in ‘syscall.dat’.
c)         Write my own run-time library for ‘acc’ system function. I may get the help from the way Multi2sim integrates OpenCL run-time libraries, e.g. the way to write Makefile and organize code.
d)         Functional simulation: ‘acc’ should have such functions as DTW, functions that are written in other common benchmarks.
e)         Timing simulation: stall the pipelines to implement timing model.
f)         Power simulation: usually, it’s not easy to get power consumption for the simulated acclerators since they are going to be the logics on FPGA in our research. But I think I can get the power estimation from Imran since he is modeling DTW on FPGA.
g)         In the final results, I want to compare the performance of two kinds of senarios which have the same # of computational units in total: one is general purpose cores with acclerators, the other is general purpose cores only. I will see if I can get the power data from Imran to compare the power consumption between the two senarios.

2.       Heterogeneous Architecture Simulation
a)         Simulator will be able to configure different kinds of cores – still need some work on modifying the code.
b)         Choose a commonly used benckmark suite.
c)         Compare the performance and power consumption of different architectures. In this case, I will use Xeon and Atom.
